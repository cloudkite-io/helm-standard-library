{{- if .Values.externalSecret }}

# deployment secrets
{{- range $appName, $appConfig := .Values.apps }}

# deployment initcontainer secret
{{- range $initContainerName, $initContainerConfig := $appConfig.initContainers -}}
{{- if $initContainerConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $initContainerName }}
  labels:
    app: {{ $appName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $initContainerName }}
    creationPolicy: Owner
  {{- if kindIs "map" $initContainerConfig.secrets }}
  {{- if $initContainerConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $initContainerConfig.secrets  }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $initContainerConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $initContainerConfig.secrets }}
  data:
  {{- range $secret := $initContainerConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# deployment container secret
{{- range $containerName, $containerConfig := $appConfig.containers -}}
{{- if $containerConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $containerName }}
  labels:
    app: {{ $appName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $containerName }}
    creationPolicy: Owner
  {{- if kindIs "map" $containerConfig.secrets }}
  {{- if $containerConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $containerConfig.secrets  }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $containerConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $containerConfig.secrets }}
  data:
  {{- range $secret := $containerConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# deployment global secret
{{- if $appConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $appName }}
  labels:
    app: {{ $appName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: {{ $.Values.externalSecret.refreshInterval | default "1m" }}
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $appName }}
    creationPolicy: Owner
  {{- if kindIs "map" $appConfig.secrets }}
  {{- if $appConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $appConfig.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $appConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $appConfig.secrets }}
  data:
  {{- range $secret := $appConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
# close deployment secrets range (line 3)
{{- end }}

# job secret
{{- range $jobName, $jobConfig := .Values.jobs }}
{{- if $jobConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $jobName }}
  labels:
    app: {{ $jobName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $jobName }}
    creationPolicy: Owner
  {{- if kindIs "map" $jobConfig.secrets }}
    {{- if $jobConfig.dataFrom }}
  dataFrom:
  - extract:
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $jobConfig.secrets  }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $jobConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $jobConfig.secrets }}
  data:
  {{- range $secret := $jobConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# global secret
{{- if .Values.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    product: {{ .Release.Name }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ .Release.Name }}
    creationPolicy: Owner
  {{- if kindIs "map" .Values.secrets }}
  {{- if .Values.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := .Values.secrets  }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := .Values.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" .Values.secrets }}
  data:
  {{- range $secret := .Values.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}

# Cronjob secrets
{{- range $cronjobName, $cronjobConfig := .Values.cronjobs -}}
# cronjob init container secret
{{- range $initContainerName, $initContainerConfig := $cronjobConfig.initContainers -}}
{{- if $initContainerConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $initContainerName }}
  labels:
    app: {{ $cronjobName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $initContainerName }}
    creationPolicy: Owner
  {{- if kindIs "map" $initContainerConfig.secrets }}
  {{- if $initContainerConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $initContainerConfig.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $initContainerConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $initContainerConfig.secrets }}
  data:
  {{- range $secret := $initContainerConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# cronjob container secret
{{- range $containerName, $containerConfig := $cronjobConfig.containers -}}
{{- if $containerConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $containerName }}
  labels:
    app: {{ $cronjobName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $containerName }}
    creationPolicy: Owner
  {{- if kindIs "map" $containerConfig.secrets }}
  {{- if $containerConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $containerConfig.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $containerConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $containerConfig.secrets }}
  data:
  {{- range $secret := $containerConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# cronjob global secret
{{- if $cronjobConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $cronjobName }}
  labels:
    app: {{ $cronjobName }}
    product: {{ $.Release.Name }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ $cronjobName }}
    creationPolicy: Owner
  {{- if kindIs "map" $cronjobConfig.secrets }}
  {{- if $cronjobConfig.dataFrom }}
  dataFrom:
    - extract:
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
  {{- else }}
  data:
  {{- if eq $.Values.externalSecret.type "azure" }}
    {{- range $key, $value := $cronjobConfig.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ $value }}
    {{- end }}
  {{- else }}
    {{- range $secret := $cronjobConfig.secrets }}
    - secretKey: {{ $secret.secretKey }}
      remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
        key: {{ $.Release.Name | upper }}_{{ $secret.secretKey }}
      {{- end }}
      {{- if or (eq $.Values.externalSecret.type "vault") (eq $.Values.externalSecret.type "aws") }}
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret.property | default $secret.secretKey }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if kindIs "slice" $cronjobConfig.secrets }}
  data:
  {{- range $secret := $cronjobConfig.secrets }}
    - secretKey: {{ $secret }}
      remoteRef:
        {{- if $.Values.externalSecret.secretPath }}
        key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
        {{- else }}
        key: {{ $.Release.Name }}
        {{- end }}
        property: {{ $secret }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}